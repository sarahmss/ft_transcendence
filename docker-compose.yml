version: '3.9'
services:
  postgres:
    container_name: postgres
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    networks:
      - transcendence

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    image: server
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    environment:
      - DB_TYPE=${DB_TYPE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - PG_PORT=${PG_PORT}
      - PG_HOST=${PG_HOST}
    networks:
      - transcendence

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    image: react
    env_file: .env
    environment:
      - REACT_APP_BACK_HOST=${BACK_URL}
      - REACT_APP_FRONT_HOST=${FRONT_URL}
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    depends_on:
      - server
    networks:
      - transcendence
    develop:
      watch:
        - action: sync
          path: ./client
          target: /client
          ignore:
            - node-modules/
        - action:
            rebuild
          path: ./client/package.json


networks:
    transcendence:
        driver: bridge
